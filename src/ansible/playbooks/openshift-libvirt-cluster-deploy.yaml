# Run sample

# cd to ansible directory

# export VARSDIR=`pwd`/vars/libvirt
# ansible-playbook playbooks/openshift-libvirt-cluster-deploy.yaml -i $VARSDIR/inventory -e config=$VARSDIR/main.yaml -e config_dir=$VARSDIR

#### Options
# --skip-tags pre-deploy
# --tags openshift-install-time-operations,openshift-auth-provider

- name: Include a play after another play
  import_playbook: openshift-libvirt-cluster-destroy.yaml

- name: Clear errors
  hosts: all:localhost
  connection: local
  tasks:
    - meta: clear_host_errors

- name: Load configs
  hosts: all:localhost
  connection: local
  roles:
    - role: ansible-config-load
      action: base
  tags:
    - always

- name: Setup Staging Directory
  hosts: localhost:hypervisor
  roles:
    - staging-dir-setup
  tags:
    - always

- name: Load cluster configs
  hosts: localhost:worker:control:hypervisor
  connection: local
  roles:
    - role: ansible-config-load
      action: cluster-config
  tags:
    - always

- name: Download Artifacts
  hosts: localhost
  roles:
    - openshift-download-artifacts
  tags:
    - openshift-download-artifacts
    - pre-deploy

- name: Create OpenShift manifest
  hosts: localhost
  connection: local
  roles:
    - openshift-create-manifest
  tags:
    - openshift-create-manifest

- name: Create OpenShift iginition
  hosts: localhost
  roles:
    - openshift-iginition-create
  tags:
    - openshift-iginition-create

- name: Upload bootstrap ignition to webserver
  hosts: localhost
  roles:
    - openshift-iginition-upload-to-webserver
  tags:
    - openshift-iginition

- name: Overwrite bootstrap ignition with ignition pointer
  hosts: localhost
  connection: local
  roles:
    - openshift-iginition-update
  tags:
    - openshift-iginition

- name: Setup libvirt VM image
  hosts: hypervisor
  roles:
    - libvirt-setup-vm-image
  tags:
    - libvirt-setup-vm-image
    - lbvirt-setup

- name: Deploy libvirt Bootstrap VM
  hosts: hypervisor
  vars:
    nodes: "{{ groups.bootstrap | list }}"
  roles:
    - libvirt-deploy-vms
  tags:
    - libvirt-deploy-vms

- name: Deploy libvirt Control VMs
  hosts: hypervisor
  vars:
    nodes: "{{ groups.control | list }}"
  roles:
    - libvirt-deploy-vms
  tags:
    - libvirt-deploy-vms

- name: Deploy libvirt Worker VMs
  hosts: hypervisor
  vars:
    nodes: "{{ groups.worker | list }}"
  roles:
    - libvirt-deploy-vms
  tags:
    - libvirt-deploy-vms

- name: OCP install time operations
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-install-time-operations
  tags:
    - openshift-install-time-operations

- name: Remove Bootstrap VM
  hosts: hypervisor
  vars:
    node: "{{ groups.bootstrap[0] }}"
  roles:
    - libvirt-remove-bootstrap
  tags:
    - libvirt-remove-bootstrap

- name: Output kubeadmin password
  hosts: localhost
  connection: local
  roles:
    - openshift-show-admin-credentials
  tags:
    - openshift-show-admin-credentials

- name: Add HTPasswd auth provider
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-auth-provider
  tags:
    - openshift-auth-provider

- name: Clean data disks
  hosts: worker
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - role: openshift-clean-storage
      when:
        - data_storage is defined
        - data_storage == True
  tags:
    - openshift-clean-storage

- name: Install Cluster Storage Provider
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - role: openshift-odf-install
      when: storage_provider == "odf"
    - role: openshift-lvm-operator-install
      when: storage_provider == "lvm"
  tags:
    - openshift-storage-install
    - post-install

- name: Install Nmstate Operator
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-nmstate-install
  tags:
    - openshift-nmstate-install
    - post-install

- name: Install OpenShift Virtualization
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - role: openshift-virt-install
      when: ocp_virt_install == True
  tags:
    - openshift-virt-install
    - post-install

- name: Create network bridge
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-create-bridge
  tags:
    - openshift-create-bridge
    - post-install

- name: Metallb install and configure
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-metallb-install
  tags:
    - openshift-metallb-install
    - post-install

- name: Multi Cluster Engine install and configure
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-mce-install
  tags:
    - openshift-mce-install
    - post-install

- name: Cluster metadata set
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - openshift-cluster-metadata-set
  tags:
    - openshift-cluster-metadata-set
    - post-install

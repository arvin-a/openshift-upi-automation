---

## vars to be passed in by playbook
# type
# vm_pool_dir
# inventory mac name

- name: General vars for VMs
  set_fact:
    vm_name: "{{ custom_vm_name }}-{{ ocp_cluster_name }}"

- name: Setup vars for Bootstrap VM
  set_fact:
    cpu: "{{ control_cpu }}"
    memory: "{{ control_memory }}"
    type: "{{ bootstrap_type }}"
    vm_pool_dir: "{{ cluster_vms_storage_base_dir }}/{{ vm_name }}"
    ignition_src: "{{ bootstrap_ign }}"
  when: custom_vm_type == bootstrap_type

- name: Setup vars for Control Plane VMs
  set_fact:
    cpu: "{{ control_cpu }}"
    memory: "{{ control_memory }}"
    type: "{{ control_type }}"
    vm_pool_dir: "{{ cluster_vms_storage_base_dir }}/{{ vm_name }}"
    ignition_src: "{{ control_ign }}"
  when: custom_vm_type == control_type

- name: Setup vars for Worker VMs
  set_fact:
    cpu: "{{ worker_cpu }}"
    memory: "{{ worker_memory }}"
    type: "{{ worker_type }}"
    vm_pool_dir: "{{ cluster_vms_storage_base_dir }}/{{ vm_name }}"
    ignition_src: "{{ worker_ign }}"
  when: custom_vm_type == worker_type

# Create base directory for cluster vm pools
- name: Create Pool directory
  file:
    state: directory
    path: "{{ vm_pool_dir }}"
    group: "qemu"
    owner: "qemu"
    mode: "0770"


# Create storage pool for VM QCOW
- name: Create Storage Pool for VM
  shell:
    cmd: "virsh pool-create-as --name {{ vm_name }} --type dir --target {{ vm_pool_dir }}"


# ## Create a second storage pool if vm is worker
- name: Create Storage Pool for data drive for worker VMs
  shell:
    cmd: "virsh pool-create-as --name {{ vm_name }}-data --type dir --target {{ data_disk_path }}"
  when: 
    - custom_vm_type == worker_type
    - data_storage is defined


## Using Shell instead of built in copy because it copies to a temp location first
## For large files that slows everything down not to mention running out of space in /home partition
- name: Copy resized base RHCOS QCOW to VM storage pool location
  vars:
    vm_qcow: "{{ vm_pool_dir }}/{{ rhcos_bin_file_name }}"
  shell:
    cmd: "cp -f {{ resized_base_qcow }} {{ vm_qcow }}; \
          chown qemu:qemu {{ vm_qcow }}; \
          chmod 0775 {{ vm_qcow }}"

## Copy Ignition to VM dir
- name: Copy Ignition to VM dir
  copy:
    src: "{{ ignition_src }}"
    dest: "{{ vm_pool_dir }}/{{ type }}.ign"
    mode: '0775'
    group: qemu
    owner: qemu


# ## Create VM
- name: Create Bootstrap or Control Plane VM
  shell:
    cmd: "virt-install --import --name {{ vm_name }} \
        --ram {{ memory }} --cpu host --vcpus {{ cpu }} \
        --disk {{ vm_pool_dir }}/{{ rhcos_bin_file_name }},format=qcow2,bus=virtio \
        --os-type linux --os-variant rhel8.2 \
        --network bridge={{ libvirt_bridge_name }},mac={{ custom_mac }} \
        --noreboot --autostart
        --graphics vnc,listen=0.0.0.0 --noautoconsole \
        --qemu-commandline='-fw_cfg name=opt/com.coreos/config,file={{ vm_pool_dir }}/{{ type }}.ign'"
  when: custom_vm_type == control_type or custom_vm_type == bootstrap_type


- name: Create Worker VMs with extra drives for odf
  shell:
    cmd: "virt-install --import --name {{ vm_name }} \
        --ram {{ memory }} --cpu host --vcpus {{ cpu }} \
        --disk {{ vm_pool_dir }}/{{ rhcos_bin_file_name }},format=qcow2,bus=virtio \
        --disk pool='{{ vm_name }}-data',size={{ data_disks.standard.size }},format=raw,bus=virtio \
        --disk path='{{ fast_data_disk_path_on_host }}',device=disk \
        --os-type linux --os-variant rhel8.2 \
        --network bridge={{ libvirt_bridge_name }},mac={{ custom_mac }} \
        --network bridge={{ libvirt_bridge_name }},mac={{ custom_mac2 }} \
        --noreboot --autostart
        --graphics vnc,listen=0.0.0.0 --noautoconsole \
        --qemu-commandline='-fw_cfg name=opt/com.coreos/config,file={{ vm_pool_dir }}/{{ type }}.ign'"
  when: 
    - custom_vm_type == worker_type
    - data_storage is defined


- name: Create Worker VMs
  shell:
    cmd: "virt-install --import --name {{ vm_name }} \
        --ram {{ memory }} --cpu host --vcpus {{ cpu }} \
        --disk {{ vm_pool_dir }}/{{ rhcos_bin_file_name }},format=qcow2,bus=virtio \
        --os-type linux --os-variant rhel8.2 \
        --network bridge={{ libvirt_bridge_name }},mac={{ custom_mac }} \
        --network bridge={{ libvirt_bridge_name }},mac={{ custom_mac2 }} \
        --noreboot --autostart \
        --graphics vnc,listen=0.0.0.0 --noautoconsole \
        --qemu-commandline='-fw_cfg name=opt/com.coreos/config,file={{ vm_pool_dir }}/{{ type }}.ign'"
  when: 
    - custom_vm_type == worker_type
    - data_storage is not defined

- name: Start libvirt VM
  shell:
    cmd: "virsh start {{ vm_name }}"
---
- name: Process all templates
  template:
    src: "{{ item }}"
    dest: "{{ staging_dir }}"
  with_fileglob:
    - ../templates/*

- name: Create Namespace
  k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yaml') }}"


- name: Apply Network Attachment Definition
  k8s:
    state: present
    definition: "{{ lookup('template', 'bridge-nad.yaml') }}"


- name: Create secrets from Ignition files
  shell:
    cmd: "oc create secret generic {{ item }}-ign --from-file=userdata={{ ocp_install_dir }}/{{ item }}.ign -n {{ ocp_cluster_name }} --dry-run=client -o yaml | oc apply -f -"
  loop:
    - master
    - worker

- name: Create bootstrap secrets from Ignition file
  shell:
    cmd: "oc create secret generic bootstrap-ign --from-file=userdata={{ ocp_install_dir }}/bootstrap-pointer.ign -n {{ ocp_cluster_name }} --dry-run=client -o yaml | oc apply -f -"


- name: Add user ca configmap to cluster namespace
  k8s:
    state: present
    definition: "{{ lookup('template', 'user-ca-configmap.yaml') }}"


- name: Apply DV for RHCOS OS image upload
  k8s:
    state: present
    definition: "{{ lookup('template', 'rhcos-dv-upload.yaml') }}"

- pause:
    seconds: 10

- name: Wait until dv import is complete
  shell:
    cmd: "oc get datavolume.cdi.kubevirt.io -n {{ ocp_cluster_name }}"
  register: dv_status
  until: dv_status.stdout == ''
  retries: 30
  delay: 10

    
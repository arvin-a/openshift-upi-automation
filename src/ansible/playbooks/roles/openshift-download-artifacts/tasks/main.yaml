---
- name: Define temp dir for downloading artifacts
  set_fact:
    artifact_download_dir: "{{ staging_dir }}/temp"

- name: Create artifacts folder
  file:
    state: directory
    path: "{{ artifact_download_dir }}"


#### Get OC CLI
- name: Download OC CLI archive
  get_url:
    url: "{{ ocp_bin_client_url }}"
    dest: "{{ artifact_download_dir }}"

- name: Extract OC CLI archive
  unarchive:
    src: "{{ artifact_download_dir }}/{{ ocp_bin_client_archive_name }}"
    dest: "{{ artifact_download_dir }}"

- name: Copy OC CLI to staging directory
  copy:
    src: "{{ artifact_download_dir }}/oc"
    dest: "{{ oc_bin }}"
    mode: '0755'



#### Get OCP Installer
- name: Download OCP Installer archive
  get_url:
    url: "{{ ocp_bin_installer_url }}"
    dest: "{{ artifact_download_dir }}"
  when: destroy is not defined or destroy == false

- name: Extract OCP Installer archive
  unarchive:
    src: "{{ artifact_download_dir }}/{{ ocp_bin_installer_archive_name }}"
    dest: "{{ staging_dir }}"
  when: destroy is not defined or destroy == false


#### Get RHCOS Image
- name: Download RHCOS archive
  get_url:
    url: "{{ rhcos_bin_qcow_url }}"
    dest: "{{ staging_dir }}"
  when: 
    - platform == "libvirt" or platform == "libvirt_bm"
    - destroy is not defined or destroy == false

## using gunzip since unarchive doesn't seem to be able to handle .gz
- name: Unzip RHCOS archive
  shell:
    chdir: "{{ staging_dir }}"
    cmd: "gunzip  {{ staging_dir }}/{{ rhcos_bin_archive_name }}"
  when: 
    - platform == "libvirt" or platform == "libvirt_bm"
    - destroy is not defined or destroy == false

- name: Copy QEMU file to hypervisor host
  copy:
    src: "{{ staging_dir }}/{{ rhcos_bin_file_name }}"
    dest: "{{ base_qcow }}"
    mode: '0644'
  delegate_to: "{{ groups.hypervisor[0] }}"
  when: 
    - platform == "libvirt" or platform == "libvirt_bm"
    - destroy is not defined or destroy == false
  become: true


## Bare Metal PXE artifacts download and stage

- name: Download RHCOS file for bare metal PXE installation
  get_url:
    url: "{{ rhcos_bin_release_url }}/{{ item }}"
    dest: "{{ staging_dir }}"
  when: 
    - platform == "libvirt_bm"
    - destroy is not defined or destroy == false
  loop:
    - "{{ bm_live_kernel }}"
    - "{{ bm_live_initramfs }}"
    - "{{ bm_live_rootfs }}"

- name: Delete folder on webserver
  delegate_to: "{{ groups['webserver'][0] }}"
  become: yes
  file:
    state: absent
    path: "{{ web_server_files_cluster_path }}"
  when: 
    - platform == "libvirt_bm"
    - destroy is not defined or destroy == false

- name: Create folder on webserver
  delegate_to: "{{ groups['webserver'][0] }}"
  become: yes
  file:
    state: directory
    path: "{{ web_server_files_cluster_path }}"
  when: 
    - platform == "libvirt_bm"
    - destroy is not defined or destroy == false


- name: Copy RHCOS artifacts for bare metal to webserver
  delegate_to: "{{ groups['webserver'][0] }}"
  become: yes
  copy:
    src: "{{ staging_dir }}/{{ item }}"
    dest: "{{ web_server_files_cluster_path }}"
    mode: '0644'
  loop:
    - "{{ bm_live_kernel }}"
    - "{{ bm_live_initramfs }}"
    - "{{ bm_live_rootfs }}"
  become: true
  when: 
    - platform == "libvirt_bm"
    - destroy is not defined or destroy == false
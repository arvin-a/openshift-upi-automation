# Run sample

# cd to ansible directory
# export CLUSTER_NAME=infra1
# ansible-playbook playbooks/openshift-kvm-cluster-deploy.yaml -i ../ocp-cluster-vars/vars/$CLUSTER_NAME/inventory.yaml -e cluster_name=$CLUSTER_NAME --vault-password-file ./vault-password-file

#### Options
# --skip-tags pre-deploy
# --tags openshift-install-time-operations,openshift-auth-provider

- name: Include a play after another play
  import_playbook: openshift-kvm-cluster-deco.yaml
  tags:
    - pre-install-deco

- name: Clear errors
  hosts: all:localhost
  connection: local
  tasks:
    - meta: clear_host_errors
  tags:
    - always

- name: Load configs
  hosts: all:localhost
  connection: local
  roles:
    - role: common/ansible-config-load
      action: base
  tags:
    - always

- name: Setup Staging Directory
  hosts: localhost:hypervisor
  roles:
    - common/staging-dir-setup
  tags:
    - always

- name: Load cluster configs
  hosts: localhost:worker:control:hypervisor
  connection: local
  roles:
    - role: common/ansible-config-load
      action: cluster-config
  tags:
    - always

- name: Download Artifacts
  hosts: localhost
  roles:
    - deploy/openshift-download-artifacts
  tags:
    - openshift-download-artifacts
    - pre-deploy

- name: Create OpenShift manifest
  hosts: localhost
  connection: local
  roles:
    - deploy/openshift-create-manifest
  tags:
    - openshift-create-manifest

- name: Create OpenShift iginition
  hosts: localhost
  roles:
    - deploy/openshift-agent-iso-create-and-stage
  tags:
    - openshift-agent-iso-create-and-stage

- name: Deploy KVM VMs
  hosts: control:worker
  gather_facts: False
  roles:
    - deploy/kvm-deploy-vms
  tags:
    - kvm-deploy-vms
  
- name: OCP install time operations
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - deploy/openshift-install-time-operations
  tags:
    - openshift-install-time-operations

- name: Add HTPasswd auth provider
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - deploy/openshift-auth-provider
  tags:
    - openshift-auth-provider

- name: Clean data disks on worker nodes
  hosts: worker
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - role: deploy/openshift-clean-storage
      when: disks is defined
  tags:
    - openshift-clean-storage

- name: Install Cluster Storage Provider
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - role: deploy/openshift-odf-install
      when: storage_provider == "odf"
    - role: deploy/openshift-lvm-operator-install
      when: storage_provider == "lvm"
  tags:
    - openshift-storage-install
    - post-install

- name: Install Nmstate Operator
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - deploy/openshift-nmstate-install
  tags:
    - openshift-nmstate-install
    - post-install

- name: Install OpenShift Virtualization
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - role: deploy/openshift-virt-olm-install
      when: ocp_virt_install == True
  tags:
    - openshift-virt-install
    - post-install

- name: Create network bridge
  hosts: worker
  gather_facts: False
  # connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - deploy/openshift-create-bridge
  tags:
    - openshift-create-bridge
    - post-install

- name: Metallb install and configure
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - deploy/openshift-metallb-install
  tags:
    - openshift-metallb-install
    - post-install

# - name: Multi Cluster Engine install and configure
#   hosts: localhost
#   connection: local
#   environment:
#     KUBECONFIG: "{{ cluster_kubeconfig }}"
#   roles:
#     - openshift-mce-install
#   tags:
#     - openshift-mce-install
#     - post-install

- name: Cluster metadata set
  hosts: localhost
  connection: local
  environment:
    KUBECONFIG: "{{ cluster_kubeconfig }}"
  roles:
    - deploy/openshift-cluster-metadata-set
  tags:
    - openshift-cluster-metadata-set
    - post-install

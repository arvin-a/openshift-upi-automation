---
- name: remove OCP install folder
  file:
    state: absent
    path: "{{ ocp_install_dir }}"

- name: Create OCP install folder and backup
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ ocp_install_dir }}"
    - "{{ staging_backup_dir }}"
    # - "{{ staging_dir }}/calico"

- name: Set rendezvous ip for cluster
  set_fact:
    rendezvous_ip: "{{ lookup('dig', groups['control'] | first) }}"

- debug:
    msg:
      - "Rendezvous ip set to {{ rendezvous_ip }} for control node {{ groups['control'] | first }}"

- name: Process OCP install config template
  template: 
    src: install-config.yaml
    dest: "{{ item }}"
  with_items:
    - "{{ ocp_install_dir }}"
    - "{{ staging_backup_dir }}"

- name: Process OCP agent config template
  template: 
    src: agent-config.yaml
    dest: "{{ item }}"
  with_items:
    - "{{ ocp_install_dir }}"
    - "{{ staging_backup_dir }}"

- name: Create OCP manifests
  shell: |
    {{ openshift_install_bin }} agent create cluster-manifests --dir {{ ocp_install_dir }}

# # Separate partition for ETCD for better performance
# - name: Process machine config for disk partitioning
#   template: 
#     src: 98-etcd-partition.yaml
#     dest: "{{ ocp_install_dir }}/cluster-manifests"
#   when: platform == "O^3"

# - name: Download Calico manifests
#   ansible.builtin.get_url:
#     url: "{{ calico_archive_uri }}"
#     dest: "{{ staging_dir }}/calico"
#   when: ocp_network_type == "Calico"

# - name: Extract Calico manifests
#   ansible.builtin.unarchive:
#     src: "{{ staging_dir }}/calico/ocp.tgz"
#     dest: "{{ staging_dir }}/calico"
#     remote_src: yes
#   when: ocp_network_type == "Calico"

# - name: Copy Calico manifests to OCP manifests directory
#   copy:
#     src: "{{ staging_dir }}/calico/ocp/"
#     dest: "{{ ocp_install_dir }}/manifests/"
#   when: ocp_network_type == "Calico"

# # - name: Set Calico to eBPF mode
# #   template: 
# #     src: calico/01-cr-installation.yaml
# #     dest: "{{ ocp_install_dir }}/manifests/"
# #   when: 
# #    - ocp_network_type == "Calico"
# #    - calico_dataplane is defined and calico_dataplane == "eBPF"

# # - name: Create Calico data plane configmap
# #   template: 
# #     src: calico/kubernetes-services-endpoint.yaml
# #     dest: "{{ ocp_install_dir }}/manifests/"
# #   when: 
# #    - ocp_network_type == "Calico"
# #    - calico_dataplane is defined and calico_dataplane == "eBPF"

# - name: Get cilium manifests
#   ansible.builtin.git:
#     repo: "{{ cilium_repo_uri }}"
#     dest: "{{ staging_dir }}/cilium"
#     single_branch: yes
#     version: main
#   when: ocp_network_type == "Cilium"

# - name: Copy Cilium manifest to openshift manifest dir
#   copy:
#     src: "{{ staging_dir }}/cilium/manifests/cilium.v{{ cilium_version }}/"
#     dest: "{{ ocp_install_dir }}/manifests/"
#     mode: '0666'
#   when: ocp_network_type == "Cilium"


- name: Backup manifest folder for debugging
  copy:
    src: "{{ ocp_install_dir }}/cluster-manifests/"
    dest: "{{ staging_dir }}/backup/"
    mode: '0666'

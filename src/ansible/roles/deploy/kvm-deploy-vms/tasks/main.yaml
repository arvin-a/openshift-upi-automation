
# Create base directory for cluster vm pools
- name: Create Pool directory
  delegate_to: "{{ groups.hypervisor[0] }}"
  file:
    state: directory
    path: "{{ cluster_vms_storage_base_dir }}"
    group: "qemu"
    owner: "qemu"
    mode: "0770"
  become: True

- name: Create Storage Pool for Cluster
  delegate_to: "{{ groups.hypervisor[0] }}"
  shell: |
    virsh pool-define-as --name {{ ocp_cluster_fqdn }} --type dir --target {{ cluster_vms_storage_base_dir }}
    virsh pool-autostart {{ ocp_cluster_fqdn }}
    virsh pool-start {{ ocp_cluster_fqdn }}
  become: True
  run_once: True

# ## Create a second storage pool if vm is worker
- name: Create Storage Pool for data drive for worker VMs
  delegate_to: "{{ groups.hypervisor[0] }}"
  shell: | 
    virsh pool-define-as --name {{ inventory_hostname }}-data --type dir --target {{ data_disk_path }}
    virsh pool-autostart {{ inventory_hostname }}-data
    virsh pool-start {{ inventory_hostname }}-data
  when: data_disk_path is defined
  become: True

- name: Create qcow image for host os drive
  delegate_to: "{{ groups.hypervisor[0] }}"
  shell: | 
    qemu-img create -f qcow2 {{ cluster_vms_storage_base_dir }}/{{ inventory_hostname }}.qcow2 {{ rhcos_os_disk_size }}
  become: True

- name: Create RAW image for additional data disk drive
  delegate_to: "{{ groups.hypervisor[0] }}"
  shell: | 
    qemu-img create -f raw {{ data_disk.path_on_hv_host }}/{{ inventory_hostname }}.img {{ data_disk.size }}
  when: data_disk is defined
  become: True

- name: "Process KVM VM XML spec for {{ inventory_hostname }} "
  delegate_to: "{{ groups.hypervisor[0] }}"
  template: 
    src: vm_spec.j2
    dest: "{{ staging_dir }}/{{ inventory_hostname }}.xml"

- name: "Create vm for host {{ inventory_hostname }}"
  delegate_to: "{{ groups.hypervisor[0] }}"
  shell: |
    virsh define --file {{ staging_dir }}/{{ inventory_hostname }}.xml
    virsh autostart {{ inventory_hostname }}
    virsh start {{ inventory_hostname }}
  become: True
